@startuml

top to bottom direction

class mastermind.views.ColorView {
    ~ write(): void
}
mastermind.utils.WithConsoleView <|--- mastermind.views.ColorView

class mastermind.views.SecretCombinationView {
    + writeln(int): void
}
mastermind.utils.WithConsoleView <|--- mastermind.views.SecretCombinationView
mastermind.views.SecretCombinationView ..> mastermind.views.MessageView

class mastermind.views.ProposedCombinationView {
    + write(list) : void
}
mastermind.utils.WithConsoleView <|-- mastermind.views.ProposedCombinationView
mastermind.views.ProposedCombinationView ..> mastermind.views.ColorView
mastermind.views.ProposedCombinationView ..> mastermind.models.Color

class mastermind.views.ProposalView {
    + writeAttempts(int) : void
    + writeWinner() : void
    + writeLooser() : void
    + writeTitle() : void
    + readProposal() : String
    + writeLineBreak() : void
}
mastermind.utils.WithConsoleView <|-- mastermind.views.ProposalView
mastermind.views.ProposalView ..> mastermind.views.MessageView

class mastermind.views.ResultView {
    + writeln(int, int): void
}
mastermind.utils.WithConsoleView <|-- mastermind.views.ResultView
mastermind.views.ResultView ..> mastermind.views.MessageView

class mastermind.views.ResumeView {
    + read() : boolean
}
mastermind.utils.WithConsoleView <|-- mastermind.views.ResumeView
mastermind.views.ResumeView ..> mastermind.utils.YesNoDialog
mastermind.views.ResumeView ..> mastermind.views.MessageView

class mastermind.views.StartView {
    + writeln(): void
}
mastermind.utils.WithConsoleView <|-- mastermind.views.StartView
mastermind.views.StartView ..> mastermind.views.MessageView


enum mastermind.views.MessageView {
    + ATTEMPTS
   	+ SECRET
   	+ RESUME
   	+ RESULT
   	+ PROPOSED_COMBINATION
   	+ TITLE
   	+ WINNER
   	+ LOOSER
    - message: String
    - MessageView(String)
}

@enduml